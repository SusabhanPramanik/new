<UserControl x:Class="EmpWPF.Views.EmployeeDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EmpWPF.Views" xmlns:viewmodels="clr-namespace:EmpWPF.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:ViewEmployeeDetailsViewModel}"
             
             mc:Ignorable="d" 
             Height="1123" Width="1200" Background="DarkOrange">
    <UserControl.Resources>
        <!--<Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path= (Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
       
        </Style>-->
        <Style x:Key="SomeStyle" TargetType="{x:Type DataGridRow}" >
        <Style.Triggers>
            <Trigger Property="DataGridRow.IsSelected" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

        <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="CustomErrorControlOnErrorStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <TextBlock FontSize="11" FontStyle="Italic" Foreground="Red"
                                       Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel Orientation="Vertical" Margin="0,0,0,402">
        <GroupBox Header="Employee Form" Margin="10">
            <Grid Background="LightBlue" Height="240">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="EmployeeID" HorizontalAlignment="Left" 
                       VerticalContentAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                <TextBox MaxLength="8" Grid.Row="0" Grid.Column="1" x:Name="TextBoxID" PreviewTextInput="NumberValidationTextBox" Height="27" 
                       Text="{Binding EmployeeID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource CustomErrorControlOnErrorStyle}"   Margin="5"  Width="300" HorizontalAlignment="Left"/>
                <Label Content="EmployeeName" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                       Grid.Row="1" Grid.Column="0"/>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="TextBoxName" Height="27" 
                       Text="{Binding EmployeeName,Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}"  Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="Address1" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Grid.Row="2" Grid.Column="0" />
                <TextBox Grid.Row="2" Grid.Column="1" x:Name="TextBlockAddress1" 
                       Text="{Binding Address1, Mode=TwoWay,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="Address2" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                       Grid.Row="3" Grid.Column="0" />
                <TextBox Grid.Row="3" Grid.Column="1" x:Name="TextBoxAddress2" Height="27" 
                       Text="{Binding Address2, Mode=TwoWay,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="Phone Number" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                       Grid.Row="4" Grid.Column="0" />
                <TextBox MaxLength="10" Grid.Row="4" Grid.Column="1" x:Name="TextBoxPhoneNumber" PreviewTextInput="NumberValidationTextBox" Height="27"
                       Text="{Binding PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="Father's Name" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Grid.Row="0" Grid.Column="2" />
                <TextBox Grid.Row="0" Grid.Column="3" x:Name="TextBoxFatherName" Height="27"
                       Text="{Binding FatherName, Mode=TwoWay,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="Mother's Name" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Grid.Row="1" Grid.Column="2" />
                <TextBox Grid.Row="1" Grid.Column="3" x:Name="TextBoxMotherName"  Height="27"
                       Text="{Binding MotherName, Mode=TwoWay,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="DOB" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Grid.Row="2" Grid.Column="2" />
                <DatePicker Grid.Row="2" Grid.Column="3" x:Name="Datapicker" Height="27"
                       Text="{Binding DOB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="State" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Grid.Row="3" Grid.Column="2" />
                <TextBox Grid.Row="3" Grid.Column="3" x:Name="TextBoxState" Height="27"
                       Text="{Binding State, Mode=TwoWay,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="5" Width="300" HorizontalAlignment="Left"/>
                <Label Content="Age" HorizontalAlignment="Left" VerticalAlignment="Center"
                       Grid.Row="4" Grid.Column="2" />
                <TextBox MaxLength="2" Grid.Row="4" Grid.Column="3" x:Name="TextBoxAge" PreviewTextInput="NumberValidationTextBox" Height="27"
                       Text="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomErrorControlOnErrorStyle}" Margin="5" Width="300" HorizontalAlignment="Left"/>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="1" Height="40" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button x:Name="ButtonSave" IsEnabled="{Binding ADD}"   Content="Add" Background="LightGreen" Height="30" Width="80" 
                    Command="{Binding PostAddButtonClicked}" />
            <Button Content="Update" IsEnabled="{Binding Change}" x:Name="ButtonEdit" Background="Yellow" Margin="2" Height="30" Width="80"  CommandParameter="{Binding EmployeeList}"
                                        Command="{Binding PostButtonClicked}"/>
            <Button Content="Delete" IsEnabled="{Binding Change}" x:Name="ButtonDelete" Background="Red" Margin="2" Height="30" Width="80" CommandParameter="{Binding EmployeeList}"
                                        Command="{Binding DeleteButtonClicked}" Click="BtnDelete_Clicked"/>
            <Button Content="New" x:Name="ButtonNew" Command="{Binding New}" Background="Blue" Margin="2" Height="30" Width="80"   />
        </StackPanel>
        <StackPanel Height="524" Background="White">
            <DataGrid  x:Name="dgEmployee"
                  xmlns = "http://schemas.microsoft.com/winfx/2006/xaml/presentation" CanUserAddRows="True" AutoGenerateColumns="False"
                  ItemsSource="{Binding Path=Employees}" FontSize="14" SelectedItem="{Binding EmployeeList, Mode=TwoWay}"  SelectionChanged="Dgemployee_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="EmployeeID" Binding="{Binding Path=EmployeeID}" Width="120"/>
                    <DataGridTextColumn Header="Employee Name" Binding="{Binding Path=EmployeeName}" Width="120"  IsReadOnly="True"/>
                    <DataGridTextColumn Header="Address1" Binding="{Binding Path=Address1}" Width="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Header="Address2" Binding="{Binding Path=Address2}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Phone Number" Binding="{Binding Path=PhoneNumber}" Width="120" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Father's Name" Binding="{Binding Path=FatherName}" Width="120" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Mother's Name" Binding="{Binding Path=MotherName}" Width="130" IsReadOnly="True"/>
                    <DataGridTextColumn Header="DOB" Binding="{Binding Path=DOB}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="State" Binding="{Binding Path=State}" Width="100" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Age" Binding="{Binding Path=Age}" Width="100" IsReadOnly="True"/>
                    <DataGridTemplateColumn Width="100">

                    </DataGridTemplateColumn>
                </DataGrid.Columns>
               
                
            </DataGrid>

        </StackPanel>

    </StackPanel>

</UserControl>
